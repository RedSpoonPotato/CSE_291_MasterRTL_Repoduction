/* Generated by Yosys 0.51+85 (git sha1 d3aec12fe, clang++ 18.1.8 -fPIC -O3) */
module b13(reset, eoc, soc, load_dato, add_mpx2, canale, mux_en, clock, data_in, dsr, errorr, data_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire [7:0] _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire [1:0] _060_;
  wire [1:0] _061_;
  wire [1:0] _062_;
  wire [1:0] _063_;
  wire [1:0] _064_;
  wire _065_;
  wire [15:0] _066_;
  wire [7:0] _067_;
  wire [3:0] _068_;
  wire [1:0] _069_;
  wire [3:0] _070_;
  wire [1:0] _071_;
  wire [3:0] _072_;
  wire [1:0] _073_;
  wire _074_;
  wire [4:0] _075_;
  wire [4:0] _076_;
  wire [1:0] _077_;
  wire _078_;
  wire [4:0] _079_;
  wire [1:0] _080_;
  wire _081_;
  wire [1:0] _082_;
  wire [1:0] _083_;
  wire [1:0] _084_;
  wire [3:0] _085_;
  wire [3:0] _086_;
  wire [1:0] _087_;
  wire [3:0] _088_;
  wire [1:0] _089_;
  wire [3:0] _090_;
  wire [1:0] _091_;
  wire [3:0] _092_;
  wire [1:0] _093_;
  wire _094_;
  wire [1:0] _095_;
  wire [1:0] _096_;
  wire [1:0] _097_;
  wire [1:0] _098_;
  wire [1:0] _099_;
  wire [3:0] _100_;
  wire [1:0] _101_;
  wire [1:0] _102_;
  wire [1:0] _103_;
  wire [1:0] _104_;
  wire [1:0] _105_;
  wire _106_;
  wire _107_;
  wire [1:0] _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire [1:0] _131_;
  wire [1:0] _132_;
  wire [1:0] _133_;
  wire _134_;
  wire [1:0] _135_;
  wire _136_;
  wire [7:0] _137_;
  wire [7:0] _138_;
  wire [3:0] _139_;
  wire [1:0] _140_;
  wire [1:0] _141_;
  wire [1:0] _142_;
  wire [1:0] _143_;
  wire _144_;
  wire [1:0] _145_;
  wire [1:0] _146_;
  wire [1:0] _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire [1:0] _151_;
  wire [1:0] _152_;
  wire [1:0] _153_;
  wire _154_;
  wire _155_;
  wire [15:0] _156_;
  wire [15:0] _157_;
  wire [3:0] _158_;
  wire [3:0] _159_;
  wire [3:0] _160_;
  wire [1:0] _161_;
  wire [1:0] _162_;
  wire [1:0] _163_;
  wire _164_;
  wire _165_;
  wire [31:0] _166_;
  wire [31:0] _167_;
  wire [3:0] _168_;
  wire [3:0] _169_;
  wire [1:0] _170_;
  wire [1:0] _171_;
  wire _172_;
  wire _173_;
  wire [1:0] _174_;
  wire [1:0] _175_;
  wire _176_;
  wire _177_;
  wire [8:0] _178_;
  wire [8:0] _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire [31:0] _184_;
  wire [9:0] _185_;
  wire [3:0] _186_;
  wire [3:0] _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire [31:0] _193_;
  wire [31:0] _194_;
  wire [31:0] _195_;
  wire [31:0] _196_;
  wire [31:0] _197_;
  wire [31:0] _198_;
  wire [31:0] _199_;
  wire [31:0] _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  reg [3:0] S1;
  wire [3:0] S2;
  output add_mpx2;
  reg add_mpx2;
  output [3:0] canale;
  wire [3:0] canale;
  input clock;
  wire clock;
  reg confirm;
  wire [7:0] conta_tmp;
  input [7:0] data_in;
  wire [7:0] data_in;
  output data_out;
  reg data_out;
  input dsr;
  wire dsr;
  input eoc;
  wire eoc;
  output errorr;
  reg errorr;
  reg [1:0] itfc_state;
  reg load;
  output load_dato;
  reg load_dato;
  reg mpx;
  output mux_en;
  reg mux_en;
  reg [3:0] next_bit;
  reg [7:0] out_reg;
  reg rdy;
  input reset;
  wire reset;
  reg send;
  reg send_data;
  reg send_en;
  reg shot;
  output soc;
  reg soc;
  reg tre;
  reg [31:0] tx_conta;
  reg tx_end;
  always @(posedge clock, posedge reset)
    if (reset) data_out <= 1'h0;
    else data_out <= _000_;
  always @(posedge clock, posedge reset)
    if (reset) tx_end <= 1'h0;
    else tx_end <= _004_;
  always @(posedge clock, posedge reset)
    if (reset) itfc_state[0] <= 1'h0;
    else if (_035_) itfc_state[0] <= _140_[0];
  always @(posedge clock, posedge reset)
    if (reset) itfc_state[1] <= 1'h0;
    else if (_035_) itfc_state[1] <= _140_[1];
  always @(posedge clock, posedge reset)
    if (reset) mpx <= 1'h0;
    else if (_157_[4]) mpx <= _040_;
  always @(posedge clock, posedge reset)
    if (reset) send_en <= 1'h0;
    else send_en <= _002_;
  always @(posedge clock, posedge reset)
    if (reset) tre <= 1'h0;
    else tre <= _003_;
  always @(posedge clock, posedge reset)
    if (reset) load_dato <= 1'h0;
    else if (_032_) load_dato <= _176_;
  always @(posedge clock, posedge reset)
    if (reset) shot <= 1'h0;
    else if (_037_) shot <= _148_;
  always @(posedge clock, posedge reset)
    if (reset) errorr <= 1'h0;
    else if (_023_) errorr <= _001_;
  always @(posedge clock, posedge reset)
    if (reset) soc <= 1'h0;
    else if (_016_) soc <= _177_;
  always @(posedge clock, posedge reset)
    if (reset) S1[0] <= 1'h0;
    else if (_010_) S1[0] <= _168_[0];
  always @(posedge clock, posedge reset)
    if (reset) S1[1] <= 1'h0;
    else if (_010_) S1[1] <= _168_[1];
  always @(posedge clock, posedge reset)
    if (reset) S1[2] <= 1'h0;
    else if (_010_) S1[2] <= _168_[2];
  always @(posedge clock, posedge reset)
    if (reset) S1[3] <= 1'h0;
    else if (_010_) S1[3] <= _168_[3];
  always @(posedge clock, posedge reset)
    if (reset) rdy <= 1'h0;
    else if (_034_) rdy <= _154_;
  always @(posedge clock, posedge reset)
    if (reset) mux_en <= 1'h0;
    else if (_030_) mux_en <= _172_;
  always @(posedge clock, posedge reset)
    if (reset) confirm <= 1'h0;
    else if (_036_) confirm <= _144_;
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[0] <= 1'h0;
    else if (send_en) tx_conta[0] <= _184_[0];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[1] <= 1'h0;
    else if (send_en) tx_conta[1] <= _184_[1];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[2] <= 1'h0;
    else if (send_en) tx_conta[2] <= _184_[2];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[3] <= 1'h0;
    else if (send_en) tx_conta[3] <= _184_[3];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[4] <= 1'h0;
    else if (send_en) tx_conta[4] <= _184_[4];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[5] <= 1'h0;
    else if (send_en) tx_conta[5] <= _184_[5];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[6] <= 1'h0;
    else if (send_en) tx_conta[6] <= _184_[6];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[7] <= 1'h0;
    else if (send_en) tx_conta[7] <= _184_[7];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[8] <= 1'h0;
    else if (send_en) tx_conta[8] <= _184_[8];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[9] <= 1'h0;
    else if (send_en) tx_conta[9] <= _184_[9];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[10] <= 1'h0;
    else if (send_en) tx_conta[10] <= _184_[10];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[11] <= 1'h0;
    else if (send_en) tx_conta[11] <= _184_[11];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[12] <= 1'h0;
    else if (send_en) tx_conta[12] <= _184_[12];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[13] <= 1'h0;
    else if (send_en) tx_conta[13] <= _184_[13];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[14] <= 1'h0;
    else if (send_en) tx_conta[14] <= _184_[14];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[15] <= 1'h0;
    else if (send_en) tx_conta[15] <= _184_[15];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[16] <= 1'h0;
    else if (send_en) tx_conta[16] <= _184_[16];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[17] <= 1'h0;
    else if (send_en) tx_conta[17] <= _184_[17];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[18] <= 1'h0;
    else if (send_en) tx_conta[18] <= _184_[18];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[19] <= 1'h0;
    else if (send_en) tx_conta[19] <= _184_[19];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[20] <= 1'h0;
    else if (send_en) tx_conta[20] <= _184_[20];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[21] <= 1'h0;
    else if (send_en) tx_conta[21] <= _184_[21];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[22] <= 1'h0;
    else if (send_en) tx_conta[22] <= _184_[22];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[23] <= 1'h0;
    else if (send_en) tx_conta[23] <= _184_[23];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[24] <= 1'h0;
    else if (send_en) tx_conta[24] <= _184_[24];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[25] <= 1'h0;
    else if (send_en) tx_conta[25] <= _184_[25];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[26] <= 1'h0;
    else if (send_en) tx_conta[26] <= _184_[26];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[27] <= 1'h0;
    else if (send_en) tx_conta[27] <= _184_[27];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[28] <= 1'h0;
    else if (send_en) tx_conta[28] <= _184_[28];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[29] <= 1'h0;
    else if (send_en) tx_conta[29] <= _184_[29];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[30] <= 1'h0;
    else if (send_en) tx_conta[30] <= _184_[30];
  always @(posedge clock, posedge reset)
    if (reset) tx_conta[31] <= 1'h0;
    else if (send_en) tx_conta[31] <= _184_[31];
  always @(posedge clock, posedge reset)
    if (reset) next_bit[0] <= 1'h0;
    else if (_038_) next_bit[0] <= _186_[0];
  always @(posedge clock, posedge reset)
    if (reset) next_bit[1] <= 1'h0;
    else if (_038_) next_bit[1] <= _186_[1];
  always @(posedge clock, posedge reset)
    if (reset) next_bit[2] <= 1'h0;
    else if (_038_) next_bit[2] <= _186_[2];
  always @(posedge clock, posedge reset)
    if (reset) next_bit[3] <= 1'h0;
    else if (_038_) next_bit[3] <= _186_[3];
  always @(posedge clock, posedge reset)
    if (reset) add_mpx2 <= 1'h0;
    else if (_033_) add_mpx2 <= 1'h1;
  always @(posedge clock, posedge reset)
    if (reset) send <= 1'h0;
    else if (_015_) send <= _136_;
  always @(posedge clock, posedge reset)
    if (reset) out_reg[0] <= 1'h0;
    else if (_031_) out_reg[0] <= data_in[0];
  always @(posedge clock, posedge reset)
    if (reset) out_reg[1] <= 1'h0;
    else if (_031_) out_reg[1] <= data_in[1];
  always @(posedge clock, posedge reset)
    if (reset) out_reg[2] <= 1'h0;
    else if (_031_) out_reg[2] <= data_in[2];
  always @(posedge clock, posedge reset)
    if (reset) out_reg[3] <= 1'h0;
    else if (_031_) out_reg[3] <= data_in[3];
  always @(posedge clock, posedge reset)
    if (reset) out_reg[4] <= 1'h0;
    else if (_031_) out_reg[4] <= data_in[4];
  always @(posedge clock, posedge reset)
    if (reset) out_reg[5] <= 1'h0;
    else if (_031_) out_reg[5] <= data_in[5];
  always @(posedge clock, posedge reset)
    if (reset) out_reg[6] <= 1'h0;
    else if (_031_) out_reg[6] <= data_in[6];
  always @(posedge clock, posedge reset)
    if (reset) out_reg[7] <= 1'h0;
    else if (_031_) out_reg[7] <= data_in[7];
  reg \S2_reg[0] ;
  always @(posedge clock, posedge reset)
    if (reset) \S2_reg[0]  <= 1'h0;
    else if (_011_) \S2_reg[0]  <= _159_[0];
  assign S2[0] = \S2_reg[0] ;
  reg \S2_reg[1] ;
  always @(posedge clock, posedge reset)
    if (reset) \S2_reg[1]  <= 1'h0;
    else if (_011_) \S2_reg[1]  <= _159_[1];
  assign S2[1] = \S2_reg[1] ;
  reg \S2_reg[2] ;
  always @(posedge clock, posedge reset)
    if (reset) \S2_reg[2]  <= 1'h0;
    else if (_011_) \S2_reg[2]  <= _159_[3];
  assign S2[2] = \S2_reg[2] ;
  reg \canale_reg[0] ;
  always @(posedge clock, posedge reset)
    if (reset) \canale_reg[0]  <= 1'h0;
    else if (!_112_) \canale_reg[0]  <= _005_[0];
  assign canale[0] = \canale_reg[0] ;
  reg \canale_reg[1] ;
  always @(posedge clock, posedge reset)
    if (reset) \canale_reg[1]  <= 1'h0;
    else if (!_112_) \canale_reg[1]  <= _005_[1];
  assign canale[1] = \canale_reg[1] ;
  reg \canale_reg[2] ;
  always @(posedge clock, posedge reset)
    if (reset) \canale_reg[2]  <= 1'h0;
    else if (!_112_) \canale_reg[2]  <= _005_[2];
  assign canale[2] = \canale_reg[2] ;
  always @(posedge clock, posedge reset)
    if (reset) load <= 1'h0;
    else if (_029_) load <= _134_;
  always @(posedge clock, posedge reset)
    if (reset) send_data <= 1'h0;
    else if (_028_) send_data <= _164_;
  reg \conta_tmp_reg[3] ;
  always @(posedge clock, posedge reset)
    if (reset) \conta_tmp_reg[3]  <= 1'h0;
    else if (!_112_) \conta_tmp_reg[3]  <= _005_[3];
  assign conta_tmp[3] = \conta_tmp_reg[3] ;
  reg \conta_tmp_reg[4] ;
  always @(posedge clock, posedge reset)
    if (reset) \conta_tmp_reg[4]  <= 1'h0;
    else if (!_112_) \conta_tmp_reg[4]  <= _005_[4];
  assign conta_tmp[4] = \conta_tmp_reg[4] ;
  reg \conta_tmp_reg[5] ;
  always @(posedge clock, posedge reset)
    if (reset) \conta_tmp_reg[5]  <= 1'h0;
    else if (!_112_) \conta_tmp_reg[5]  <= _005_[5];
  assign conta_tmp[5] = \conta_tmp_reg[5] ;
  reg \conta_tmp_reg[6] ;
  always @(posedge clock, posedge reset)
    if (reset) \conta_tmp_reg[6]  <= 1'h0;
    else if (!_112_) \conta_tmp_reg[6]  <= _005_[6];
  assign conta_tmp[6] = \conta_tmp_reg[6] ;
  reg \conta_tmp_reg[7] ;
  always @(posedge clock, posedge reset)
    if (reset) \conta_tmp_reg[7]  <= 1'h0;
    else if (!_112_) \conta_tmp_reg[7]  <= _005_[7];
  assign conta_tmp[7] = \conta_tmp_reg[7] ;
  assign _194_[0] = ~canale[0];
  assign _044_ = ~next_bit[1];
  assign _045_ = ~next_bit[0];
  assign _046_ = ~next_bit[2];
  assign _047_ = ~next_bit[3];
  assign _200_[16] = ~tx_conta[16];
  assign _200_[17] = ~tx_conta[17];
  assign _200_[18] = ~tx_conta[18];
  assign _200_[19] = ~tx_conta[19];
  assign _200_[20] = ~tx_conta[20];
  assign _200_[21] = ~tx_conta[21];
  assign _200_[22] = ~tx_conta[22];
  assign _200_[23] = ~tx_conta[23];
  assign _200_[24] = ~tx_conta[24];
  assign _200_[25] = ~tx_conta[25];
  assign _200_[26] = ~tx_conta[26];
  assign _200_[27] = ~tx_conta[27];
  assign _200_[28] = ~tx_conta[28];
  assign _200_[29] = ~tx_conta[29];
  assign _200_[30] = ~tx_conta[30];
  assign _200_[31] = ~tx_conta[31];
  assign _200_[8] = ~tx_conta[8];
  assign _200_[9] = ~tx_conta[9];
  assign _200_[10] = ~tx_conta[10];
  assign _200_[11] = ~tx_conta[11];
  assign _200_[12] = ~tx_conta[12];
  assign _200_[13] = ~tx_conta[13];
  assign _200_[14] = ~tx_conta[14];
  assign _200_[15] = ~tx_conta[15];
  assign _200_[4] = ~tx_conta[4];
  assign _200_[7] = ~tx_conta[7];
  assign _200_[2] = ~tx_conta[2];
  assign _200_[1] = ~tx_conta[1];
  assign _197_[0] = ~tx_conta[0];
  assign _048_ = ~S1[2];
  assign _042_ = ~S1[1];
  assign _050_ = ~_195_[3];
  assign _051_ = ~S2[0];
  assign _049_ = ~S2[1];
  assign _054_ = ~itfc_state[0];
  assign _055_ = ~itfc_state[1];
  assign _041_ = ~S1[0];
  assign _052_ = ~confirm;
  assign _043_ = _060_[0] |  _060_[1];
  assign _109_ = _061_[0] |  _061_[1];
  assign _060_[0] = _041_ |  _042_;
  assign _110_ = _060_[0] |  _061_[1];
  assign _014_ = _167_[18] |  _167_[14];
  assign _111_ = _062_[0] |  _060_[1];
  assign _032_ = _012_ &  _014_;
  assign _062_[0] = _041_ |  S1[1];
  assign _058_ = _062_[0] |  _061_[1];
  assign _061_[1] = _048_ |  S1[3];
  assign _112_ = _063_[0] |  _061_[1];
  assign _063_[0] = S1[0] |  _042_;
  assign _060_[1] = S1[2] |  S1[3];
  assign _113_ = _063_[0] |  _060_[1];
  assign _023_ = send |  load;
  assign _035_ = _022_ &  _021_;
  assign _015_ = _135_[0] |  _133_[0];
  assign _024_ = _139_[0] |  _133_[1];
  assign _022_ = _015_ |  _024_;
  assign _021_ = tx_end |  _056_;
  assign _064_[0] = _020_ &  _019_;
  assign _064_[1] = _018_ &  _017_;
  assign _034_ = _064_[0] &  _064_[1];
  assign _019_ = confirm |  _053_;
  assign _018_ = send_data |  _059_;
  assign _065_ = mpx |  _052_;
  assign _017_ = _065_ |  _053_;
  assign _033_ = _157_[4] &  _040_;
  assign _066_[0] = _197_[0] &  _200_[1];
  assign _066_[7] = _200_[14] &  _200_[15];
  assign _066_[8] = _200_[16] &  _200_[17];
  assign _066_[9] = _200_[18] &  _200_[19];
  assign _066_[10] = _200_[20] &  _200_[21];
  assign _066_[11] = _200_[22] &  _200_[23];
  assign _066_[12] = _200_[24] &  _200_[25];
  assign _066_[13] = _200_[26] &  _200_[27];
  assign _066_[14] = _200_[28] &  _200_[29];
  assign _067_[0] = _066_[0] &  _066_[1];
  assign _067_[2] = _066_[4] &  _066_[5];
  assign _067_[4] = _066_[8] &  _066_[9];
  assign _067_[5] = _066_[10] &  _066_[11];
  assign _067_[6] = _066_[12] &  _066_[13];
  assign _067_[7] = _066_[14] &  _066_[15];
  assign _068_[0] = _067_[0] &  _067_[1];
  assign _068_[1] = _067_[2] &  _067_[3];
  assign _068_[2] = _067_[4] &  _067_[5];
  assign _068_[3] = _067_[6] &  _067_[7];
  assign _069_[0] = _068_[0] &  _068_[1];
  assign _069_[1] = _068_[2] &  _068_[3];
  assign _202_ = _069_[0] &  _069_[1];
  assign _070_[0] = _178_[0] |  _178_[1];
  assign _070_[1] = _178_[2] |  _178_[3];
  assign _070_[2] = _178_[4] |  _178_[5];
  assign _070_[3] = _178_[6] |  _178_[7];
  assign _071_[0] = _070_[0] |  _070_[1];
  assign _071_[1] = _070_[2] |  _070_[3];
  assign _181_ = _071_[0] |  _071_[1];
  assign _072_[1] = _179_[2] |  _179_[3];
  assign _072_[2] = _179_[4] |  _179_[5];
  assign _072_[3] = _179_[6] |  _179_[7];
  assign _073_[0] = _072_[0] |  _072_[1];
  assign _073_[1] = _072_[2] |  _072_[3];
  assign _074_ = _073_[0] |  _073_[1];
  assign _207_ = _074_ |  _179_[8];
  assign _187_[1] = _075_[2] |  _076_[4];
  assign _072_[0] = _179_[0] |  _179_[1];
  assign _077_[1] = _179_[3] |  _179_[5];
  assign _078_ = _072_[0] |  _077_[1];
  assign _187_[0] = _078_ |  _179_[7];
  assign _079_[0] = _185_[0] |  _179_[0];
  assign _187_[3] = _179_[1] |  _179_[2];
  assign _075_[2] = _179_[3] |  _179_[4];
  assign _075_[3] = _179_[5] |  _179_[6];
  assign _076_[4] = _179_[7] |  _179_[8];
  assign _080_[0] = _079_[0] |  _187_[3];
  assign _187_[2] = _075_[2] |  _075_[3];
  assign _141_[1] = _082_[0] |  _133_[0];
  assign _082_[0] = _138_[1] |  _135_[0];
  assign _141_[0] = _082_[0] |  _138_[6];
  assign _083_[0] = _139_[0] |  _135_[0];
  assign _009_ = _133_[0] |  _133_[1];
  assign _204_ = _083_[0] |  _009_;
  assign _149_ = _146_[0] |  _146_[1];
  assign _155_ = _152_[0] |  _152_[1];
  assign _160_[1] = _157_[5] |  _146_[1];
  assign _160_[0] = _157_[4] |  _157_[12];
  assign _084_[0] = _158_[0] |  _147_[0];
  assign _084_[1] = _146_[1] |  _153_[1];
  assign _205_ = _084_[0] |  _084_[1];
  assign _165_ = _162_[0] |  _162_[1];
  assign _169_[2] = _085_[1] |  _085_[2];
  assign _087_[1] = _167_[17] |  _167_[25];
  assign _169_[1] = _087_[0] |  _087_[1];
  assign _086_[0] = _167_[1] |  _167_[5];
  assign _088_[2] = _167_[16] |  _167_[22];
  assign _087_[0] = _086_[0] |  _167_[14];
  assign _089_[1] = _088_[2] |  _167_[28];
  assign _169_[0] = _087_[0] |  _089_[1];
  assign _090_[0] = _163_[0] |  _167_[5];
  assign _085_[1] = _162_[1] |  _167_[14];
  assign _085_[2] = _167_[18] |  _167_[22];
  assign _090_[3] = _167_[25] |  _167_[28];
  assign _091_[0] = _090_[0] |  _085_[1];
  assign _091_[1] = _085_[2] |  _090_[3];
  assign _206_ = _091_[0] |  _091_[1];
  assign _173_ = _171_[0] |  _167_[28];
  assign _037_ = _026_ &  _025_;
  assign _026_ = _146_[1] |  _147_[0];
  assign _092_[0] = _194_[0] |  _195_[1];
  assign _092_[1] = _195_[2] |  _050_;
  assign _092_[2] = _195_[4] |  _195_[5];
  assign _092_[3] = _195_[6] |  _195_[7];
  assign _093_[0] = _092_[0] |  _092_[1];
  assign _093_[1] = _092_[2] |  _092_[3];
  assign _114_ = _093_[0] |  _093_[1];
  assign _025_ = _052_ |  _053_;
  assign _081_ = _080_[0] |  _187_[2];
  assign _027_ = _081_ |  _076_[4];
  assign _036_ = _024_ &  _021_;
  assign _094_ = send_en &  _027_;
  assign _038_ = _094_ &  _129_;
  assign _006_ = rdy |  _043_;
  assign _007_ = _163_[0] |  _162_[1];
  assign _028_ = _006_ &  _007_;
  assign _008_ = shot |  _057_;
  assign _115_ = _095_[0] |  _095_[1];
  assign _116_ = _095_[0] |  _096_[1];
  assign _096_[1] = next_bit[2] |  _047_;
  assign _117_ = _097_[0] |  _096_[1];
  assign _118_ = _098_[0] |  _098_[1];
  assign _119_ = _099_[0] |  _098_[1];
  assign _095_[0] = _045_ |  next_bit[1];
  assign _120_ = _095_[0] |  _098_[1];
  assign _098_[1] = _046_ |  next_bit[3];
  assign _121_ = _097_[0] |  _098_[1];
  assign _098_[0] = _045_ |  _044_;
  assign _122_ = _098_[0] |  _095_[1];
  assign _099_[0] = next_bit[0] |  _044_;
  assign _123_ = _099_[0] |  _095_[1];
  assign _029_ = _008_ &  _009_;
  assign _100_[1] = _162_[1] |  _167_[25];
  assign _013_ = _167_[28] |  _167_[18];
  assign _016_ = _167_[14] |  _167_[22];
  assign _101_[0] = _090_[0] |  _100_[1];
  assign _101_[1] = _013_ |  _016_;
  assign _010_ = _101_[0] |  _101_[1];
  assign _102_[0] = _158_[0] |  _146_[1];
  assign _020_ = _153_[1] |  _147_[0];
  assign _011_ = _102_[0] |  _020_;
  assign _124_ = itfc_state[0] |  _055_;
  assign _125_ = _054_ |  itfc_state[1];
  assign _056_ = _054_ |  _055_;
  assign _012_ = _166_[17] |  _058_;
  assign _030_ = _012_ &  _013_;
  assign _103_[0] = _051_ |  _049_;
  assign _126_ = _103_[0] |  S2[2];
  assign _104_[0] = _051_ |  S2[1];
  assign _127_ = _104_[0] |  S2[2];
  assign _105_[0] = S2[0] |  _049_;
  assign _053_ = _105_[0] |  S2[2];
  assign _031_ = load &  _039_;
  assign _061_[0] = S1[0] |  S1[1];
  assign _106_ = _061_[0] |  _060_[1];
  assign _097_[0] = next_bit[0] |  next_bit[1];
  assign _095_[1] = next_bit[2] |  next_bit[3];
  assign _107_ = _097_[0] |  _095_[1];
  assign _057_ = itfc_state[0] |  itfc_state[1];
  assign _108_[0] = S2[0] |  S2[1];
  assign _059_ = _108_[0] |  S2[2];
  assign _163_[0] = ~ _043_;
  assign _167_[5] = ~ _109_;
  assign _162_[1] = ~ _110_;
  assign _167_[25] = ~ _111_;
  assign _167_[28] = ~ _106_;
  assign _167_[18] = ~ _058_;
  assign _167_[14] = ~ _112_;
  assign _167_[22] = ~ _113_;
  assign _179_[0] = ~ _116_;
  assign _179_[1] = ~ _117_;
  assign _179_[2] = ~ _118_;
  assign _179_[3] = ~ _119_;
  assign _179_[4] = ~ _120_;
  assign _179_[5] = ~ _121_;
  assign _179_[6] = ~ _122_;
  assign _179_[7] = ~ _123_;
  assign _179_[8] = ~ _107_;
  assign _135_[0] = ~ _124_;
  assign _133_[0] = ~ _125_;
  assign _139_[0] = ~ _056_;
  assign _133_[1] = ~ _057_;
  assign _158_[0] = ~ _126_;
  assign _146_[1] = ~ _127_;
  assign _153_[1] = ~ _059_;
  assign _147_[0] = ~ _053_;
  assign _130_ = _039_ |  _128_;
  assign _166_[17] = ~ eoc;
  assign _170_[0] = eoc ?  1'hx : 1'h0;
  assign _174_[1] = eoc ?  1'hx : 1'h1;
  assign _180_ = _207_ ?  _181_ : 1'h1;
  assign _186_[0] = _027_ ?  _187_[0] : 1'hx;
  assign _186_[1] = _027_ ?  _187_[1] : 1'hx;
  assign _186_[2] = _027_ ?  _187_[2] : 1'hx;
  assign _186_[3] = _027_ ?  _187_[3] : 1'hx;
  assign _134_ = _009_ ?  _132_[1] : 1'hx;
  assign _136_ = _015_ ?  _133_[0] : 1'hx;
  assign _140_[0] = _204_ ?  _141_[0] : 1'hx;
  assign _140_[1] = _204_ ?  _141_[1] : 1'hx;
  assign _144_ = _024_ ?  _143_[0] : 1'hx;
  assign _148_ = _026_ ?  _149_ : 1'hx;
  assign _154_ = _020_ ?  _155_ : 1'hx;
  assign _159_[0] = _205_ ?  _160_[0] : 1'hx;
  assign _159_[1] = _205_ ?  _160_[1] : 1'hx;
  assign _159_[3] = _205_ ?  1'h0 : 1'hx;
  assign _164_ = _007_ ?  _165_ : 1'hx;
  assign _168_[0] = _206_ ?  _169_[0] : 1'hx;
  assign _168_[1] = _206_ ?  _169_[1] : 1'hx;
  assign _168_[2] = _206_ ?  _169_[2] : 1'hx;
  assign _168_[3] = _206_ ?  1'h0 : 1'hx;
  assign _172_ = _013_ ?  _173_ : 1'hx;
  assign _176_ = _014_ ?  _175_[1] : 1'hx;
  assign _177_ = _016_ ?  _167_[22] : 1'hx;
  assign _182_ = _203_ ?  1'h1 : _180_;
  assign _000_ = send_en ?  _182_ : 1'h1;
  assign _185_[0] = ~ _115_;
  assign _183_ = _203_ ?  1'h0 : _185_[0];
  assign _004_ = send_en ?  _183_ : 1'h0;
  assign _184_[0] = _203_ ?  _197_[0] : 1'h0;
  assign _184_[1] = _203_ ?  _198_[1] : 1'h0;
  assign _184_[2] = _203_ ?  _198_[2] : 1'h0;
  assign _184_[3] = _203_ ?  _198_[3] : 1'h0;
  assign _184_[4] = _203_ ?  _198_[4] : 1'h0;
  assign _184_[5] = _203_ ?  _198_[5] : 1'h0;
  assign _184_[6] = _203_ ?  _198_[6] : 1'h0;
  assign _184_[7] = _203_ ?  _198_[7] : 1'h0;
  assign _184_[8] = _203_ ?  _198_[8] : 1'h0;
  assign _184_[9] = _203_ ?  _198_[9] : 1'h0;
  assign _184_[10] = _203_ ?  _198_[10] : 1'h0;
  assign _184_[11] = _203_ ?  _198_[11] : 1'h0;
  assign _184_[12] = _203_ ?  _198_[12] : 1'h0;
  assign _184_[13] = _203_ ?  _198_[13] : 1'h0;
  assign _184_[14] = _203_ ?  _198_[14] : 1'h0;
  assign _184_[15] = _203_ ?  _198_[15] : 1'h0;
  assign _184_[16] = _203_ ?  _198_[16] : 1'h0;
  assign _184_[17] = _203_ ?  _198_[17] : 1'h0;
  assign _184_[18] = _203_ ?  _198_[18] : 1'h0;
  assign _184_[19] = _203_ ?  _198_[19] : 1'h0;
  assign _184_[20] = _203_ ?  _198_[20] : 1'h0;
  assign _184_[21] = _203_ ?  _198_[21] : 1'h0;
  assign _184_[22] = _203_ ?  _198_[22] : 1'h0;
  assign _184_[23] = _203_ ?  _198_[23] : 1'h0;
  assign _184_[24] = _203_ ?  _198_[24] : 1'h0;
  assign _184_[25] = _203_ ?  _198_[25] : 1'h0;
  assign _184_[26] = _203_ ?  _198_[26] : 1'h0;
  assign _184_[27] = _203_ ?  _198_[27] : 1'h0;
  assign _184_[28] = _203_ ?  _198_[28] : 1'h0;
  assign _184_[29] = _203_ ?  _198_[29] : 1'h0;
  assign _184_[30] = _203_ ?  _198_[30] : 1'h0;
  assign _184_[31] = _203_ ?  _198_[31] : 1'h0;
  assign _188_ = tx_end ?  1'h1 : tre;
  assign _189_ = tre ?  _188_ : 1'h1;
  assign _003_ = load ?  _189_ : _188_;
  assign _190_ = tx_end ?  1'h0 : send_en;
  assign _191_ = _130_ ?  _190_ : 1'h1;
  assign _002_ = send ?  _191_ : _190_;
  assign _192_ = load ?  tre : 1'hx;
  assign _001_ = send ?  _130_ : _192_;
  assign _131_[1] = shot ?  1'h1 : 1'hx;
  assign _137_[1] = tx_end ?  1'h0 : 1'hx;
  assign _142_[0] = tx_end ?  1'h1 : 1'hx;
  assign _145_[0] = confirm ?  1'hx : 1'h0;
  assign _150_ = mpx ?  1'h0 : 1'hx;
  assign _151_[0] = confirm ?  _150_ : 1'hx;
  assign _151_[1] = send_data ?  1'h1 : 1'hx;
  assign _156_[5] = confirm ?  mpx : 1'h1;
  assign _005_[0] = _114_ ?  _194_[0] : 1'h0;
  assign _005_[1] = _114_ ?  _195_[1] : 1'h0;
  assign _005_[2] = _114_ ?  _195_[2] : 1'h0;
  assign _005_[3] = _114_ ?  _195_[3] : 1'h0;
  assign _005_[4] = _114_ ?  _195_[4] : 1'h0;
  assign _005_[5] = _114_ ?  _195_[5] : 1'h0;
  assign _005_[6] = _114_ ?  _195_[6] : 1'h0;
  assign _005_[7] = _114_ ?  _195_[7] : 1'h0;
  assign _161_[0] = rdy ?  1'h0 : 1'hx;
  assign _166_[1] = ~ rdy;
  assign _040_ = ~ mpx;
  assign _201_ = ~ _199_[31];
  assign _129_ = ~ _203_;
  assign _128_ = ~ dsr;
  assign _039_ = ~ tre;
  assign _203_ = _201_ |  _202_;
  assign _178_[7] = out_reg[7] &  _179_[7];
  assign _178_[6] = out_reg[6] &  _179_[6];
  assign _178_[5] = out_reg[5] &  _179_[5];
  assign _178_[4] = out_reg[4] &  _179_[4];
  assign _178_[3] = out_reg[3] &  _179_[3];
  assign _178_[2] = out_reg[2] &  _179_[2];
  assign _178_[1] = out_reg[1] &  _179_[1];
  assign _178_[0] = out_reg[0] &  _179_[0];
  assign _132_[1] = _131_[1] &  _133_[1];
  assign _138_[6] = shot &  _133_[1];
  assign _138_[1] = _137_[1] &  _139_[0];
  assign _143_[0] = _142_[0] &  _139_[0];
  assign _146_[0] = _145_[0] &  _147_[0];
  assign _152_[1] = _151_[1] &  _153_[1];
  assign _152_[0] = _151_[0] &  _147_[0];
  assign _157_[12] = send_data &  _153_[1];
  assign _157_[4] = confirm &  _147_[0];
  assign _157_[5] = _156_[5] &  _147_[0];
  assign _162_[0] = _161_[0] &  _163_[0];
  assign _167_[16] = eoc &  _167_[18];
  assign _167_[17] = _166_[17] &  _167_[18];
  assign _167_[1] = _166_[1] &  _163_[0];
  assign _171_[0] = _170_[0] &  _167_[18];
  assign _175_[1] = _174_[1] &  _167_[18];
  assign _195_[1] = canale[1] ^  canale[0];
  assign _195_[2] = canale[2] ^  _193_[1];
  assign _195_[3] = conta_tmp[3] ^  _193_[2];
  assign _195_[4] = conta_tmp[4] ^  _193_[3];
  assign _195_[5] = conta_tmp[5] ^  _193_[4];
  assign _195_[6] = conta_tmp[6] ^  _193_[5];
  assign _195_[7] = conta_tmp[7] ^  _193_[6];
  assign _198_[1] = tx_conta[1] ^  tx_conta[0];
  assign _198_[2] = tx_conta[2] ^  _196_[1];
  assign _198_[3] = tx_conta[3] ^  _196_[2];
  assign _198_[4] = tx_conta[4] ^  _196_[3];
  assign _198_[5] = tx_conta[5] ^  _196_[4];
  assign _198_[6] = tx_conta[6] ^  _196_[5];
  assign _198_[7] = tx_conta[7] ^  _196_[6];
  assign _198_[8] = tx_conta[8] ^  _196_[7];
  assign _198_[9] = tx_conta[9] ^  _196_[8];
  assign _198_[10] = tx_conta[10] ^  _196_[9];
  assign _198_[11] = tx_conta[11] ^  _196_[10];
  assign _198_[12] = tx_conta[12] ^  _196_[11];
  assign _198_[13] = tx_conta[13] ^  _196_[12];
  assign _198_[14] = tx_conta[14] ^  _196_[13];
  assign _198_[15] = tx_conta[15] ^  _196_[14];
  assign _198_[16] = tx_conta[16] ^  _196_[15];
  assign _198_[17] = tx_conta[17] ^  _196_[16];
  assign _198_[18] = tx_conta[18] ^  _196_[17];
  assign _198_[19] = tx_conta[19] ^  _196_[18];
  assign _198_[20] = tx_conta[20] ^  _196_[19];
  assign _198_[21] = tx_conta[21] ^  _196_[20];
  assign _198_[22] = tx_conta[22] ^  _196_[21];
  assign _198_[23] = tx_conta[23] ^  _196_[22];
  assign _198_[24] = tx_conta[24] ^  _196_[23];
  assign _198_[25] = tx_conta[25] ^  _196_[24];
  assign _198_[26] = tx_conta[26] ^  _196_[25];
  assign _198_[27] = tx_conta[27] ^  _196_[26];
  assign _198_[28] = tx_conta[28] ^  _196_[27];
  assign _198_[29] = tx_conta[29] ^  _196_[28];
  assign _198_[30] = tx_conta[30] ^  _196_[29];
  assign _198_[31] = tx_conta[31] ^  _196_[30];
  assign _193_[1] = canale[1] &  canale[0];
  assign _193_[3] = _208_ &  _193_[1];
  assign _208_ = conta_tmp[3] &  canale[2];
  assign _209_ = conta_tmp[5] &  conta_tmp[4];
  assign _193_[5] = _209_ &  _193_[3];
  assign _193_[2] = canale[2] &  _193_[1];
  assign _193_[4] = conta_tmp[4] &  _193_[3];
  assign _193_[6] = conta_tmp[6] &  _193_[5];
  assign _210_ = tx_conta[3] &  tx_conta[2];
  assign _211_ = tx_conta[5] &  tx_conta[4];
  assign _232_ = _200_[9] &  tx_conta[8];
  assign _233_ = _200_[11] &  tx_conta[10];
  assign _234_ = _200_[13] &  tx_conta[12];
  assign _235_ = _200_[15] &  tx_conta[14];
  assign _236_ = _200_[17] &  tx_conta[16];
  assign _237_ = _200_[19] &  tx_conta[18];
  assign _238_ = _200_[21] &  tx_conta[20];
  assign _239_ = _200_[23] &  tx_conta[22];
  assign _240_ = _200_[25] &  tx_conta[24];
  assign _241_ = _200_[27] &  tx_conta[26];
  assign _242_ = _200_[29] &  tx_conta[28];
  assign _243_ = _200_[31] &  tx_conta[30];
  assign _244_ = _066_[3] &  _211_;
  assign _245_ = _066_[5] &  _258_;
  assign _246_ = _066_[7] &  _260_;
  assign _247_ = _066_[9] &  _262_;
  assign _248_ = _066_[11] &  _264_;
  assign _249_ = _066_[13] &  _266_;
  assign _250_ = _066_[15] &  _268_;
  assign _251_ = _067_[1] &  _199_[3];
  assign _252_ = _067_[3] &  _271_;
  assign _253_ = _067_[5] &  _273_;
  assign _254_ = _067_[7] &  _275_;
  assign _255_ = _068_[1] &  _199_[7];
  assign _256_ = _068_[3] &  _278_;
  assign _257_ = _069_[1] &  _199_[15];
  assign _066_[1] = tx_conta[3] &  _200_[2];
  assign _066_[2] = tx_conta[5] &  _200_[4];
  assign _066_[3] = _200_[7] &  tx_conta[6];
  assign _066_[4] = _200_[9] &  _200_[8];
  assign _066_[5] = _200_[11] &  _200_[10];
  assign _066_[6] = _200_[13] &  _200_[12];
  assign _066_[15] = _200_[31] &  _200_[30];
  assign _067_[1] = _066_[3] &  _066_[2];
  assign _067_[3] = _066_[7] &  _066_[6];
  assign _258_ = tx_conta[9] |  _232_;
  assign _259_ = tx_conta[11] |  _233_;
  assign _260_ = tx_conta[13] |  _234_;
  assign _261_ = tx_conta[15] |  _235_;
  assign _262_ = tx_conta[17] |  _236_;
  assign _263_ = tx_conta[19] |  _237_;
  assign _264_ = tx_conta[21] |  _238_;
  assign _265_ = tx_conta[23] |  _239_;
  assign _266_ = tx_conta[25] |  _240_;
  assign _267_ = tx_conta[27] |  _241_;
  assign _268_ = tx_conta[29] |  _242_;
  assign _269_ = tx_conta[31] |  _243_;
  assign _199_[3] = _210_ |  _066_[1];
  assign _270_ = tx_conta[7] |  _244_;
  assign _271_ = _259_ |  _245_;
  assign _272_ = _261_ |  _246_;
  assign _273_ = _263_ |  _247_;
  assign _274_ = _265_ |  _248_;
  assign _275_ = _267_ |  _249_;
  assign _276_ = _269_ |  _250_;
  assign _199_[7] = _270_ |  _251_;
  assign _277_ = _272_ |  _252_;
  assign _278_ = _274_ |  _253_;
  assign _279_ = _276_ |  _254_;
  assign _199_[15] = _277_ |  _255_;
  assign _280_ = _279_ |  _256_;
  assign _199_[31] = _280_ |  _257_;
  assign _196_[1] = tx_conta[1] &  tx_conta[0];
  assign _196_[3] = _210_ &  _196_[1];
  assign _196_[7] = _224_ &  _196_[3];
  assign _196_[15] = _230_ &  _196_[7];
  assign _212_ = tx_conta[7] &  tx_conta[6];
  assign _213_ = tx_conta[9] &  tx_conta[8];
  assign _214_ = tx_conta[11] &  tx_conta[10];
  assign _215_ = tx_conta[13] &  tx_conta[12];
  assign _216_ = tx_conta[15] &  tx_conta[14];
  assign _217_ = tx_conta[17] &  tx_conta[16];
  assign _218_ = tx_conta[19] &  tx_conta[18];
  assign _219_ = tx_conta[21] &  tx_conta[20];
  assign _220_ = tx_conta[23] &  tx_conta[22];
  assign _221_ = tx_conta[25] &  tx_conta[24];
  assign _222_ = tx_conta[27] &  tx_conta[26];
  assign _223_ = tx_conta[29] &  tx_conta[28];
  assign _224_ = _212_ &  _211_;
  assign _225_ = _214_ &  _213_;
  assign _226_ = _216_ &  _215_;
  assign _227_ = _218_ &  _217_;
  assign _228_ = _220_ &  _219_;
  assign _229_ = _222_ &  _221_;
  assign _230_ = _226_ &  _225_;
  assign _231_ = _228_ &  _227_;
  assign _196_[23] = _231_ &  _196_[15];
  assign _196_[11] = _225_ &  _196_[7];
  assign _196_[19] = _227_ &  _196_[15];
  assign _196_[27] = _229_ &  _196_[23];
  assign _196_[5] = _211_ &  _196_[3];
  assign _196_[9] = _213_ &  _196_[7];
  assign _196_[13] = _215_ &  _196_[11];
  assign _196_[17] = _217_ &  _196_[15];
  assign _196_[21] = _219_ &  _196_[19];
  assign _196_[25] = _221_ &  _196_[23];
  assign _196_[29] = _223_ &  _196_[27];
  assign _196_[2] = tx_conta[2] &  _196_[1];
  assign _196_[4] = tx_conta[4] &  _196_[3];
  assign _196_[6] = tx_conta[6] &  _196_[5];
  assign _196_[8] = tx_conta[8] &  _196_[7];
  assign _196_[10] = tx_conta[10] &  _196_[9];
  assign _196_[12] = tx_conta[12] &  _196_[11];
  assign _196_[14] = tx_conta[14] &  _196_[13];
  assign _196_[16] = tx_conta[16] &  _196_[15];
  assign _196_[18] = tx_conta[18] &  _196_[17];
  assign _196_[20] = tx_conta[20] &  _196_[19];
  assign _196_[22] = tx_conta[22] &  _196_[21];
  assign _196_[24] = tx_conta[24] &  _196_[23];
  assign _196_[26] = tx_conta[26] &  _196_[25];
  assign _196_[28] = tx_conta[28] &  _196_[27];
  assign _196_[30] = tx_conta[30] &  _196_[29];
  assign _062_[1] = _060_[1];
  assign _063_[1] = _061_[1];
  assign { _075_[4], _075_[1:0] } = 3'h0;
  assign _076_[3:0] = { 1'h0, _075_[2], 2'h0 };
  assign _077_[0] = _072_[0];
  assign _079_[4:1] = { _076_[4], _075_[3:2], _187_[3] };
  assign _080_[1] = _187_[2];
  assign _082_[1] = _133_[0];
  assign _083_[1] = _009_;
  assign { _085_[3], _085_[0] } = 2'h0;
  assign _086_[3:1] = { _167_[25], _167_[17], _167_[14] };
  assign { _088_[3], _088_[1:0] } = { _167_[28], _167_[14], _086_[0] };
  assign _089_[0] = _087_[0];
  assign _090_[2:1] = _085_[2:1];
  assign _096_[0] = _095_[0];
  assign _097_[1] = _096_[1];
  assign _099_[1] = _098_[1];
  assign { _100_[3:2], _100_[0] } = { _016_, _013_, _090_[0] };
  assign _102_[1] = _020_;
  assign _103_[1] = S2[2];
  assign _104_[1] = S2[2];
  assign _105_[1] = S2[2];
  assign _108_[1] = S2[2];
  assign _131_[0] = 1'h0;
  assign _132_[0] = 1'h0;
  assign _135_[1] = _133_[0];
  assign { _137_[7:2], _137_[0] } = { 1'h0, shot, 4'hb, _137_[1] };
  assign { _138_[7], _138_[5:2], _138_[0] } = { 1'h0, _133_[0], 1'h0, _135_[0], _135_[0], _138_[1] };
  assign _139_[3:1] = { _133_, _135_[0] };
  assign _142_[1] = 1'h0;
  assign _143_[1] = 1'h0;
  assign _145_[1] = 1'h1;
  assign _147_[1] = _146_[1];
  assign _153_[0] = _147_[0];
  assign { _156_[15:6], _156_[4:0] } = { 3'h0, send_data, 6'h08, confirm, 4'h0 };
  assign { _157_[15:13], _157_[11:6], _157_[3:0] } = { 5'h00, _146_[1], 7'h00 };
  assign _158_[3:1] = { _153_[1], _146_[1], _147_[0] };
  assign _159_[2] = _159_[3];
  assign _160_[3:2] = 2'h0;
  assign _161_[1] = 1'h1;
  assign _163_[1] = _162_[1];
  assign { _166_[31:18], _166_[16:2], _166_[0] } = { 14'h0495, eoc, 14'h1d0c, _166_[1] };
  assign { _167_[31:29], _167_[27:26], _167_[24:23], _167_[21:19], _167_[15], _167_[13:6], _167_[4:2], _167_[0] } = { 8'h00, _167_[22], 2'h0, _167_[14], _167_[14], 1'h0, _162_[1], 4'h0, _167_[5], 2'h0, _167_[1] };
  assign _169_[3] = 1'h0;
  assign _170_[1] = 1'h1;
  assign _171_[1] = _167_[28];
  assign _174_[0] = 1'h0;
  assign _175_[0] = 1'h0;
  assign _178_[8] = 1'h0;
  assign _185_[9:1] = _179_;
  assign { _193_[31:8], _193_[0] } = { 24'h000000, canale[0] };
  assign _194_[31:1] = { 24'h000000, conta_tmp[7:3], canale[2:1] };
  assign { _195_[31:8], _195_[0] } = { 23'h000000, _193_[7], _194_[0] };
  assign _196_[0] = tx_conta[0];
  assign _197_[31:1] = tx_conta[31:1];
  assign _198_[0] = _197_[0];
  assign _199_[2:0] = 3'h7;
  assign { _200_[6:5], _200_[3], _200_[0] } = { tx_conta[6:5], tx_conta[3], _197_[0] };
  assign S2[3] = S2[2];
  assign canale[3] = conta_tmp[3];
  assign conta_tmp[2:0] = canale[2:0];
endmodule
