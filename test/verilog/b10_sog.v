/* Generated by Yosys 0.51+85 (git sha1 d3aec12fe, clang++ 18.1.8 -fPIC -O3) */
module b10(r_button, g_button, key, start, reset, test, cts, ctr, rts, rtr, clock, v_in, v_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire [1:0] _054_;
  wire _055_;
  wire [1:0] _056_;
  wire [1:0] _057_;
  wire [1:0] _058_;
  wire [1:0] _059_;
  wire [1:0] _060_;
  wire [2:0] _061_;
  wire _062_;
  wire [2:0] _063_;
  wire _064_;
  wire [1:0] _065_;
  wire [1:0] _066_;
  wire _067_;
  wire [1:0] _068_;
  wire [2:0] _069_;
  wire _070_;
  wire [2:0] _071_;
  wire _072_;
  wire _073_;
  wire [1:0] _074_;
  wire [1:0] _075_;
  wire [4:0] _076_;
  wire [1:0] _077_;
  wire _078_;
  wire [4:0] _079_;
  wire [1:0] _080_;
  wire _081_;
  wire [4:0] _082_;
  wire [1:0] _083_;
  wire _084_;
  wire [4:0] _085_;
  wire [1:0] _086_;
  wire _087_;
  wire [4:0] _088_;
  wire [1:0] _089_;
  wire _090_;
  wire [3:0] _091_;
  wire [1:0] _092_;
  wire _093_;
  wire [4:0] _094_;
  wire [1:0] _095_;
  wire _096_;
  wire _097_;
  wire [2:0] _098_;
  wire _099_;
  wire _100_;
  wire [1:0] _101_;
  wire _102_;
  wire _103_;
  wire [1:0] _104_;
  wire _105_;
  wire [2:0] _106_;
  wire _107_;
  wire _108_;
  wire [1:0] _109_;
  wire [1:0] _110_;
  wire _111_;
  wire [1:0] _112_;
  wire _113_;
  wire _114_;
  wire [1:0] _115_;
  wire [1:0] _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire [5:0] _130_;
  wire [5:0] _131_;
  wire [5:0] _132_;
  wire _133_;
  wire _134_;
  wire [4:0] _135_;
  wire [4:0] _136_;
  wire _137_;
  wire _138_;
  wire [4:0] _139_;
  wire [4:0] _140_;
  wire _141_;
  wire _142_;
  wire [5:0] _143_;
  wire [5:0] _144_;
  wire [5:0] _145_;
  wire _146_;
  wire _147_;
  wire [2:0] _148_;
  wire [2:0] _149_;
  wire [2:0] _150_;
  wire _151_;
  wire _152_;
  wire [3:0] _153_;
  wire [3:0] _154_;
  wire [3:0] _155_;
  wire _156_;
  wire _157_;
  wire [7:0] _158_;
  wire [7:0] _159_;
  wire [3:0] _160_;
  wire [3:0] _161_;
  wire [39:0] _162_;
  wire [39:0] _163_;
  wire [9:0] _164_;
  wire [3:0] _165_;
  wire [3:0] _166_;
  wire [3:0] _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  input clock;
  wire clock;
  output ctr;
  reg ctr;
  output cts;
  reg cts;
  input g_button;
  wire g_button;
  input key;
  wire key;
  reg last_g;
  reg last_r;
  input r_button;
  wire r_button;
  input reset;
  wire reset;
  input rtr;
  wire rtr;
  input rts;
  wire rts;
  wire [3:0] sign;
  input start;
  wire start;
  reg [3:0] stato;
  input test;
  wire test;
  input [3:0] v_in;
  wire [3:0] v_in;
  output [3:0] v_out;
  reg [3:0] v_out;
  reg voto0;
  reg voto1;
  reg voto2;
  reg voto3;
  always @(posedge clock, posedge reset)
    if (reset) ctr <= 1'h0;
    else if (_026_) ctr <= _151_;
  always @(posedge clock, posedge reset)
    if (reset) voto1 <= 1'h0;
    else if (_033_) voto1 <= _141_;
  always @(posedge clock, posedge reset)
    if (reset) voto2 <= 1'h0;
    else if (_031_) voto2 <= _137_;
  always @(posedge clock, posedge reset)
    if (reset) stato[0] <= 1'h0;
    else if (_034_) stato[0] <= _165_[0];
  always @(posedge clock, posedge reset)
    if (reset) stato[1] <= 1'h0;
    else if (_034_) stato[1] <= _165_[1];
  always @(posedge clock, posedge reset)
    if (reset) stato[2] <= 1'h0;
    else if (_034_) stato[2] <= _165_[2];
  always @(posedge clock, posedge reset)
    if (reset) stato[3] <= 1'h0;
    else if (_034_) stato[3] <= _165_[3];
  always @(posedge clock, posedge reset)
    if (reset) v_out[3] <= 1'h0;
    else if (_032_) v_out[3] <= voto3;
  always @(posedge clock, posedge reset)
    if (reset) voto0 <= 1'h0;
    else if (_030_) voto0 <= _146_;
  always @(posedge clock, posedge reset)
    if (reset) voto3 <= 1'h0;
    else if (_029_) voto3 <= _133_;
  reg \sign_reg[3] ;
  always @(posedge clock, posedge reset)
    if (reset) \sign_reg[3]  <= 1'h0;
    else if (_028_) \sign_reg[3]  <= _160_[3];
  assign sign[3] = \sign_reg[3] ;
  always @(posedge clock, posedge reset)
    if (reset) last_g <= 1'h0;
    else if (_027_) last_g <= g_button;
  always @(posedge clock, posedge reset)
    if (reset) last_r <= 1'h0;
    else if (_027_) last_r <= r_button;
  always @(posedge clock, posedge reset)
    if (reset) cts <= 1'h0;
    else if (_035_) cts <= _156_;
  always @(posedge clock, posedge reset)
    if (reset) v_out[2] <= 1'h0;
    else if (_032_) v_out[2] <= voto2;
  always @(posedge clock, posedge reset)
    if (reset) v_out[1] <= 1'h0;
    else if (_032_) v_out[1] <= voto1;
  always @(posedge clock, posedge reset)
    if (reset) v_out[0] <= 1'h0;
    else if (_032_) v_out[0] <= voto0;
  assign _036_ = ~stato[0];
  assign _038_ = ~stato[3];
  assign _039_ = ~stato[1];
  assign _046_ = ~rts;
  assign _040_ = ~stato[2];
  assign _048_ = ~rtr;
  assign _043_ = ~start;
  assign _052_ = ~_155_[0];
  assign _162_[39] = ~test;
  assign _044_ = ~key;
  assign _115_[1] = _003_ |  _042_;
  assign _019_ = _097_ |  _115_[1];
  assign _054_[0] = _013_ &  _005_;
  assign _054_[1] = _014_ &  _018_;
  assign _055_ = _054_[0] &  _054_[1];
  assign _033_ = _055_ &  _019_;
  assign _117_ = _056_[0] |  _056_[1];
  assign _049_ = _057_[0] |  _056_[1];
  assign _056_[1] = stato[2] |  _038_;
  assign _051_ = _058_[0] |  _056_[1];
  assign _059_[0] = _036_ |  _039_;
  assign _047_ = _059_[0] |  _059_[1];
  assign _056_[0] = stato[0] |  _039_;
  assign _041_ = _056_[0] |  _059_[1];
  assign _057_[0] = _036_ |  stato[1];
  assign _059_[1] = _040_ |  stato[3];
  assign _045_ = _057_[0] |  _059_[1];
  assign _058_[0] = stato[0] |  stato[1];
  assign _050_ = _058_[0] |  _059_[1];
  assign _118_ = _059_[0] |  _060_[1];
  assign _042_ = _056_[0] |  _060_[1];
  assign _060_[1] = stato[2] |  stato[3];
  assign _037_ = _057_[0] |  _060_[1];
  assign _145_[3] = _132_[5] |  _132_[2];
  assign _028_ = _010_ &  _011_;
  assign _021_ = _048_ |  _051_;
  assign _020_ = _043_ |  _042_;
  assign _061_[0] = _131_[0] |  _131_[1];
  assign _061_[1] = _131_[2] |  _131_[3];
  assign _062_ = _061_[0] |  _061_[1];
  assign _134_ = _062_ |  _131_[4];
  assign _063_[1] = _132_[2] |  _132_[3];
  assign _064_ = _063_[0] |  _063_[1];
  assign _168_ = _064_ |  _063_[2];
  assign _065_[0] = _136_[0] |  _136_[1];
  assign _065_[1] = _136_[2] |  _131_[4];
  assign _138_ = _065_[0] |  _065_[1];
  assign _169_ = _067_ |  _132_[5];
  assign _068_[0] = _140_[0] |  _140_[1];
  assign _068_[1] = _140_[2] |  _131_[4];
  assign _142_ = _068_[0] |  _068_[1];
  assign _063_[0] = _132_[0] |  _132_[1];
  assign _067_ = _063_[0] |  _066_[1];
  assign _069_[0] = _144_[0] |  _144_[1];
  assign _069_[2] = _144_[4] |  _131_[4];
  assign _070_ = _069_[0] |  _144_[2];
  assign _147_ = _070_ |  _069_[2];
  assign _071_[0] = _145_[0] |  _132_[0];
  assign _071_[1] = _132_[1] |  _145_[3];
  assign _066_[1] = _132_[3] |  _132_[4];
  assign _072_ = _071_[0] |  _071_[1];
  assign _170_ = _072_ |  _066_[1];
  assign _152_ = _149_[0] |  _149_[1];
  assign _073_ = _132_[1] |  _150_[1];
  assign _171_ = _073_ |  _132_[5];
  assign _074_[0] = _154_[0] |  _154_[1];
  assign _157_ = _074_[0] |  _154_[2];
  assign _075_[0] = _155_[0] |  _155_[1];
  assign _063_[2] = _132_[4] |  _132_[5];
  assign _172_ = _075_[0] |  _063_[2];
  assign _161_[3] = _132_[0] |  _159_[7];
  assign _076_[2] = _149_[0] |  _163_[23];
  assign _076_[3] = _163_[27] |  _163_[31];
  assign _076_[4] = _131_[4] |  _163_[39];
  assign _077_[0] = _163_[7] |  _076_[1];
  assign _077_[1] = _076_[2] |  _076_[3];
  assign _078_ = _077_[0] |  _077_[1];
  assign _166_[3] = _078_ |  _076_[4];
  assign _079_[0] = _163_[2] |  _163_[6];
  assign _079_[1] = _163_[11] |  _163_[14];
  assign _079_[3] = _163_[26] |  _163_[31];
  assign _080_[0] = _079_[0] |  _079_[1];
  assign _080_[1] = _079_[2] |  _079_[3];
  assign _081_ = _080_[0] |  _080_[1];
  assign _166_[2] = _081_ |  _131_[4];
  assign _076_[1] = _163_[11] |  _163_[15];
  assign _079_[2] = _163_[18] |  _149_[1];
  assign _082_[3] = _163_[25] |  _163_[29];
  assign _083_[1] = _079_[2] |  _082_[3];
  assign _084_ = _077_[0] |  _083_[1];
  assign _166_[1] = _084_ |  _163_[33];
  assign _085_[1] = _163_[8] |  _163_[15];
  assign _085_[2] = _163_[18] |  _163_[23];
  assign _085_[3] = _163_[26] |  _163_[29];
  assign _085_[4] = _131_[4] |  _132_[5];
  assign _086_[0] = _163_[6] |  _085_[1];
  assign _086_[1] = _085_[2] |  _085_[3];
  assign _087_ = _086_[0] |  _086_[1];
  assign _166_[0] = _087_ |  _085_[4];
  assign _088_[0] = _163_[2] |  _132_[0];
  assign _155_[0] = _164_[2] |  _164_[3];
  assign _088_[3] = _155_[1] |  _132_[3];
  assign _089_[0] = _088_[0] |  _155_[0];
  assign _089_[1] = _073_ |  _088_[3];
  assign _090_ = _089_[0] |  _089_[1];
  assign _173_ = _090_ |  _063_[2];
  assign _091_[0] = _024_ &  _023_;
  assign _091_[1] = _022_ &  _005_;
  assign _091_[2] = _014_ &  _006_;
  assign _091_[3] = _008_ &  _021_;
  assign _092_[0] = _091_[0] &  _091_[1];
  assign _092_[1] = _091_[2] &  _091_[3];
  assign _093_ = _092_[0] &  _092_[1];
  assign _034_ = _093_ &  _020_;
  assign _094_[0] = _163_[2] |  _132_[5];
  assign _094_[1] = _132_[0] |  _164_[2];
  assign _094_[2] = _164_[3] |  _132_[1];
  assign _094_[3] = _150_[1] |  _155_[1];
  assign _095_[0] = _094_[0] |  _094_[1];
  assign _095_[1] = _094_[2] |  _094_[3];
  assign _096_ = _095_[0] |  _095_[1];
  assign _024_ = _096_ |  _066_[1];
  assign _023_ = _116_[0] |  _049_;
  assign _022_ = _048_ |  _047_;
  assign _012_ = _097_ |  _042_;
  assign _163_[2] = _132_[2] |  _145_[0];
  assign _013_ = start |  _042_;
  assign _005_ = rts |  _041_;
  assign _014_ = start |  _037_;
  assign _098_[1] = _132_[1] |  _132_[2];
  assign _099_ = _011_ |  _098_[1];
  assign _015_ = _099_ |  _066_[1];
  assign _006_ = _046_ |  _045_;
  assign _100_ = _132_[5] |  _132_[1];
  assign _007_ = _100_ |  _150_[1];
  assign _101_[0] = _012_ &  _013_;
  assign _101_[1] = _005_ &  _014_;
  assign _102_ = _101_[0] &  _101_[1];
  assign _029_ = _102_ &  _015_;
  assign _103_ = _005_ &  _006_;
  assign _026_ = _103_ &  _007_;
  assign _008_ = rtr |  _050_;
  assign _104_[0] = _132_[5] |  _164_[2];
  assign _104_[1] = _164_[3] |  _155_[1];
  assign _105_ = _104_[0] |  _104_[1];
  assign _009_ = _105_ |  _132_[4];
  assign _025_ = _048_ |  _052_;
  assign _106_[2] = _132_[4] |  _145_[3];
  assign _107_ = _071_[0] |  _106_[1];
  assign _016_ = _107_ |  _106_[2];
  assign _108_ = key &  start;
  assign _027_ = _108_ &  _132_[3];
  assign _109_[1] = _014_ &  _016_;
  assign _030_ = _054_[0] &  _109_[1];
  assign _010_ = _162_[39] |  _053_;
  assign _110_[1] = _004_ |  _042_;
  assign _017_ = _097_ |  _110_[1];
  assign _011_ = _132_[5] |  _132_[0];
  assign _106_[1] = _132_[1] |  _132_[3];
  assign _111_ = _011_ |  _106_[1];
  assign _018_ = _111_ |  _132_[4];
  assign _112_[1] = _014_ &  _017_;
  assign _113_ = _054_[0] &  _112_[1];
  assign _031_ = _113_ &  _018_;
  assign _032_ = rtr &  _155_[1];
  assign _114_ = _008_ &  _009_;
  assign _035_ = _114_ &  _025_;
  assign _097_ = _044_ |  _043_;
  assign _053_ = _058_[0] |  _060_[1];
  assign _132_[5] = ~ _053_;
  assign _145_[0] = ~ _117_;
  assign _132_[0] = ~ _049_;
  assign _164_[2] = ~ _051_;
  assign _164_[3] = ~ _047_;
  assign _132_[1] = ~ _041_;
  assign _150_[1] = ~ _045_;
  assign _155_[1] = ~ _050_;
  assign _132_[2] = ~ _118_;
  assign _132_[3] = ~ _042_;
  assign _132_[4] = ~ _037_;
  assign _121_ = _119_ &  voto1;
  assign _122_ = _121_ &  voto2;
  assign _123_ = _122_ &  _120_;
  assign _124_ = v_in[0] &  v_in[1];
  assign _125_ = _124_ &  v_in[2];
  assign _116_[0] = _125_ &  v_in[3];
  assign _148_[0] = rts ?  1'h0 : 1'hx;
  assign _153_[1] = rtr ?  1'h1 : 1'hx;
  assign _158_[7] = test ?  1'hx : 1'h0;
  assign _162_[7] = _116_[0] ?  1'h1 : 1'hx;
  assign _162_[6] = _116_[0] ?  1'h0 : 1'hx;
  assign _153_[0] = rtr ?  1'hx : 1'h0;
  assign _162_[14] = rtr ?  1'hx : 1'h1;
  assign _162_[18] = rts ?  1'h1 : 1'hx;
  assign _162_[23] = rts ?  1'hx : 1'h0;
  assign _148_[1] = rts ?  1'hx : 1'h1;
  assign _167_[2] = ~ _123_;
  assign _162_[25] = rtr ?  1'h0 : 1'hx;
  assign _162_[26] = rtr ?  _167_[2] : 1'hx;
  assign _162_[27] = rtr ?  _123_ : 1'hx;
  assign _162_[29] = start ?  1'hx : 1'h1;
  assign _162_[31] = start ?  1'hx : 1'h0;
  assign _162_[33] = start ?  1'h1 : 1'hx;
  assign _130_[4] = start ?  1'h0 : 1'hx;
  assign _133_ = _168_ ?  _134_ : 1'hx;
  assign _137_ = _169_ ?  _138_ : 1'hx;
  assign _141_ = _169_ ?  _142_ : 1'hx;
  assign _146_ = _170_ ?  _147_ : 1'hx;
  assign _151_ = _171_ ?  _152_ : 1'hx;
  assign _156_ = _172_ ?  _157_ : 1'hx;
  assign _160_[3] = _011_ ?  _161_[3] : 1'hx;
  assign _165_[0] = _173_ ?  _166_[0] : 1'hx;
  assign _165_[1] = _173_ ?  _166_[1] : 1'hx;
  assign _165_[2] = _173_ ?  _166_[2] : 1'hx;
  assign _165_[3] = _173_ ?  _166_[3] : 1'hx;
  assign _130_[1] = rts ?  v_in[3] : 1'hx;
  assign _135_[1] = rts ?  v_in[2] : 1'hx;
  assign _139_[1] = rts ?  v_in[1] : 1'hx;
  assign _143_[2] = rts ?  v_in[0] : 1'hx;
  assign _002_ = key ?  1'hx : 1'h0;
  assign _128_ = _004_ ?  _127_ : 1'hx;
  assign _001_ = key ?  _128_ : 1'h0;
  assign _129_ = _003_ ?  _126_ : 1'hx;
  assign _000_ = key ?  _129_ : 1'h0;
  assign _130_[3] = start ?  _002_ : 1'hx;
  assign _135_[2] = start ?  _001_ : 1'hx;
  assign _139_[2] = start ?  _000_ : 1'hx;
  assign _143_[4] = start ?  key : 1'hx;
  assign _126_ = ~ voto1;
  assign _127_ = ~ voto2;
  assign _119_ = ~ voto0;
  assign _120_ = ~ voto3;
  assign _143_[0] = ~ sign[3];
  assign _131_[3] = _130_[3] &  _132_[3];
  assign _131_[2] = _130_[2] &  _132_[2];
  assign _131_[1] = _130_[1] &  _132_[1];
  assign _131_[0] = v_in[3] &  _132_[0];
  assign _136_[2] = _135_[2] &  _132_[3];
  assign _136_[1] = _135_[1] &  _132_[1];
  assign _136_[0] = v_in[2] &  _132_[0];
  assign _140_[2] = _139_[2] &  _132_[3];
  assign _140_[1] = _139_[1] &  _132_[1];
  assign _140_[0] = v_in[1] &  _132_[0];
  assign _144_[4] = _143_[4] &  _132_[3];
  assign _144_[2] = _143_[2] &  _132_[1];
  assign _144_[1] = v_in[0] &  _132_[0];
  assign _144_[0] = _143_[0] &  _145_[0];
  assign _154_[2] = rtr &  _132_[4];
  assign _154_[1] = _153_[1] &  _155_[1];
  assign _154_[0] = _153_[0] &  _155_[0];
  assign _159_[7] = _158_[7] &  _132_[5];
  assign _163_[39] = _162_[39] &  _132_[5];
  assign _163_[33] = _162_[33] &  _132_[4];
  assign _131_[4] = _130_[4] &  _132_[4];
  assign _163_[29] = _162_[29] &  _132_[3];
  assign _163_[31] = _162_[31] &  _132_[3];
  assign _163_[26] = _162_[26] &  _155_[1];
  assign _163_[25] = _162_[25] &  _155_[1];
  assign _163_[27] = _162_[27] &  _155_[1];
  assign _149_[1] = _148_[1] &  _150_[1];
  assign _163_[23] = _162_[23] &  _150_[1];
  assign _163_[18] = _162_[18] &  _132_[1];
  assign _149_[0] = _148_[0] &  _132_[1];
  assign _163_[14] = _162_[14] &  _164_[3];
  assign _163_[15] = _153_[0] &  _164_[3];
  assign _163_[8] = _162_[14] &  _164_[2];
  assign _163_[11] = _153_[0] &  _164_[2];
  assign _163_[6] = _162_[6] &  _132_[0];
  assign _163_[7] = _162_[7] &  _132_[0];
  assign _175_ = g_button ^  last_g;
  assign _003_ = _175_ &  g_button;
  assign _176_ = r_button ^  last_r;
  assign _004_ = _176_ &  r_button;
  assign _174_ = voto1 ^  voto2;
  assign _130_[2] = voto0 ^  _174_;
  assign _057_[1] = _056_[1];
  assign _058_[1] = _056_[1];
  assign _060_[0] = _059_[0];
  assign _061_[2] = _131_[4];
  assign _066_[0] = _063_[0];
  assign _069_[1] = _144_[2];
  assign _071_[2] = _066_[1];
  assign _074_[1] = _154_[2];
  assign _075_[1] = _063_[2];
  assign _076_[0] = _163_[7];
  assign _079_[4] = _131_[4];
  assign { _082_[4], _082_[2:0] } = { _163_[33], _079_[2], _076_[1], _163_[7] };
  assign _083_[0] = _077_[0];
  assign _085_[0] = _163_[6];
  assign { _088_[4], _088_[2:1] } = { _063_[2], _073_, _155_[0] };
  assign _094_[4] = _066_[1];
  assign { _098_[2], _098_[0] } = { _066_[1], _011_ };
  assign _106_[0] = _071_[0];
  assign _109_[0] = _054_[0];
  assign _110_[0] = _097_;
  assign _112_[0] = _054_[0];
  assign _115_[0] = _097_;
  assign _116_[1] = _049_;
  assign { _130_[5], _130_[0] } = { 1'h0, v_in[3] };
  assign _131_[5] = 1'h0;
  assign { _135_[4:3], _135_[0] } = { 1'h0, _130_[4], v_in[2] };
  assign _136_[4:3] = { 1'h0, _131_[4] };
  assign { _139_[4:3], _139_[0] } = { 1'h0, _130_[4], v_in[1] };
  assign _140_[4:3] = { 1'h0, _131_[4] };
  assign { _143_[5], _143_[3], _143_[1] } = { _130_[4], 1'h0, v_in[0] };
  assign { _144_[5], _144_[3] } = { _131_[4], 1'h0 };
  assign { _145_[5:4], _145_[2:1] } = { _132_[4:3], _132_[1:0] };
  assign _148_[2] = 1'h0;
  assign _149_[2] = 1'h0;
  assign { _150_[2], _150_[0] } = { _132_[5], _132_[1] };
  assign _153_[3:2] = { 1'h0, rtr };
  assign _154_[3] = 1'h0;
  assign _155_[3:2] = _132_[5:4];
  assign _158_[6:0] = { _158_[7], _158_[7], _158_[7], 4'h8 };
  assign _159_[6:0] = { _159_[7], _159_[7], _159_[7], _132_[0], 3'h0 };
  assign _160_[1:0] = { _160_[2], _160_[2] };
  assign _161_[2:0] = { _159_[7], _159_[7], _159_[7] };
  assign { _162_[38:34], _162_[32], _162_[30], _162_[28], _162_[24], _162_[22:19], _162_[17:15], _162_[13:8], _162_[5:0] } = { 3'h1, _130_[4], _130_[4], _130_[4], _162_[31], _162_[29], _162_[26], _148_[1], _148_[1], _162_[23], _148_[0], _162_[18], _162_[18], _153_[0], _153_[0], _153_[0], _153_[0], _153_[0], _153_[0], _162_[14], _162_[7:6], 4'h4 };
  assign { _163_[38:34], _163_[32], _163_[30], _163_[28], _163_[24], _163_[22:19], _163_[17:16], _163_[13:12], _163_[10:9], _163_[5:3], _163_[1:0] } = { 2'h0, _132_[5], _131_[4], _131_[4], _131_[4], _163_[31], _163_[29], _163_[26], _149_[1], _149_[1], _163_[23], _149_[0], _163_[18], _163_[18], _163_[15], _163_[15], _163_[11], _163_[11], _163_[7:6], 3'h0 };
  assign { _164_[9:4], _164_[1:0] } = { _132_[5:3], _155_[1], _150_[1], _132_[1:0], _163_[2] };
  assign { _167_[3], _167_[1:0] } = { _123_, 1'h0, _167_[2] };
  assign sign[1:0] = { sign[2], sign[2] };
endmodule
